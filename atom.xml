<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>yuzijiangorzのblog</title>
  
  <subtitle>QWQ</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yuzijiangorz.gitee.io/"/>
  <updated>2020-03-22T05:06:16.452Z</updated>
  <id>http://yuzijiangorz.gitee.io/</id>
  
  <author>
    <name>yuzijiangorz</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>关于 VA ARGS</title>
    <link href="http://yuzijiangorz.gitee.io/2020/03/21/%E5%85%B3%E4%BA%8Eva-args/"/>
    <id>http://yuzijiangorz.gitee.io/2020/03/21/%E5%85%B3%E4%BA%8Eva-args/</id>
    <published>2020-03-21T08:43:01.000Z</published>
    <updated>2020-03-22T05:06:16.452Z</updated>
    
    <content type="html"><![CDATA[<p>关于<code>__VA_ARGS__</code></p><a id="more"></a><p>$\color{blue}{今天,本酱发现了一个非常神奇的\mathtt{C++}宏: \mathtt{VA}}$ $\color{blue}{\mathtt{ARGS}}$</p><p>他的用途如下:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdarg.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> myprintf(...) printf(__VA_ARGS__)<span class="hljs-comment">//用途</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> reset(...) __VA_ARGS__=0</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span><br></span>&#123;<br>    <span class="hljs-keyword">int</span> x=<span class="hljs-number">200</span>;<br>    myprintf(x);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>对，就是让…生效的东西</p><p>妈妈再也不用担心我不知道printf中的…是啥了</p><p>还可以用<code>##</code>将<code>__VA_ARGS__</code>和其他东西粘起来</p><p>计算参数个数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> ARG_N(...) \<br>    ARG_N_(0, ##__VA_ARGS__, ARG_N_RESQ())</span><br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> ARG_N_(...) \<br>    ARG_N_M(__VA_ARGS__)</span><br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> ARG_N_M( \<br>          _0, _1, _2, _3, _4, _5, _6, _7, _8, _9,_10, \<br>         _11,_12,_13,_14,_15,_16,_17,_18,_19,_20, \<br>         _21,_22,_23,_24,_25,_26,_27,_28,_29,_30, \<br>         _31,_32,_33,_34,_35,_36,_37,_38,_39,_40, \<br>         _41,_42,_43,_44,_45,_46,_47,_48,_49,_50, \<br>         _51,_52,_53,_54,_55,_56,_57,_58,_59,_60, \<br>         _61,_62,_63,N,...) N</span><br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> ARG_N_RESQ() \<br>         63,62,61,60,                   \<br>         59,58,57,56,55,54,53,52,51,50, \<br>         49,48,47,46,45,44,43,42,41,40, \<br>         39,38,37,36,35,34,33,32,31,30, \<br>         29,28,27,26,25,24,23,22,21,20, \<br>         19,18,17,16,15,14,13,12,11,10, \<br>         9,8,7,6,5,4,3,2,1,0</span><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span><br></span>&#123;<br>    <span class="hljs-comment">//测试例子</span><br>    <span class="hljs-keyword">int</span> i=ARG_N(<span class="hljs-string">"qwq"</span>,<span class="hljs-number">1</span>,<span class="hljs-number">5</span>,<span class="hljs-number">7</span>,<span class="hljs-number">3</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>);<br>    <span class="hljs-built_in">cout</span>&lt;&lt;i;<br>&#125;<br></code></pre></td></tr></table></figure><p>debug</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> debug(...) printf(<span class="hljs-meta-string">"[ERROR][xxx.cpp]:(%s|%d):"</span>__func__,__LINE__,##__VA_ARGS__)</span><br></code></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于&lt;code&gt;__VA_ARGS__&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="干货" scheme="http://yuzijiangorz.gitee.io/tags/%E5%B9%B2%E8%B4%A7/"/>
    
      <category term="有意义原创" scheme="http://yuzijiangorz.gitee.io/tags/%E6%9C%89%E6%84%8F%E4%B9%89%E5%8E%9F%E5%88%9B/"/>
    
  </entry>
  
  <entry>
    <title>公告</title>
    <link href="http://yuzijiangorz.gitee.io/2020/03/16/%E5%85%AC%E5%91%8A/"/>
    <id>http://yuzijiangorz.gitee.io/2020/03/16/%E5%85%AC%E5%91%8A/</id>
    <published>2020-03-16T05:13:35.000Z</published>
    <updated>2020-03-16T06:51:50.844Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>警告：在访问本站任何页面前，请仔细阅读本文，以免给您带来不必要的麻烦！任何因未阅读本文造成的后果请自己承担！</p></blockquote><a id="more"></a><h1 id="关于版权"><a href="#关于版权" class="headerlink" title="关于版权"></a>关于版权</h1><p>本博客所有文章除特别声明外，均采用 <strong>Apache License 2.0</strong> 许可协议。</p><p>本博客发出的文章分为3类: 有意义原创,转载,无意义原创,笔记</p><p>有意义原创:</p><p>根据 <strong>Apache License 2.0</strong> 协议:</p><p>您可以在任何介质中复制和分发其作品或派生作品的副本，不论有无修改，以及源或对象形式，只要满足下列条件：</p><p>你必须给予任何其他作品或衍生作品的收件人一份本许可证复印件；</p><p>您必须使任何修改后的文件带有突出的通知，说明您更改了文件；<br>你必须以你所散发的任何衍生作品的来源形式保留作品的来源形式的所有版权、专利、商标和归属通知，不包括那些不属于衍生作品的任何部分的通知；</p><p>如果作品包括“告示“文本文件作为其分发的一部分，那么，您分发的任何衍生作品必须包括包含在该通知文件中的属性通知的可读副本，不包括那些不涉及衍生作品的任何部分的通知，至少在以下一个地方：在一个通知文本文件中作为一部分衍生作品；在源形式或文件内，如果与衍生作品一起提供；或者，在衍生作品产生的显示中，如果和任何地方，这种第三方通知通常出现。通知文件的内容仅供参考，不修改许可证。您可以将您自己的属性通知添加到衍生作品中，您可以将其分发，或者作为对工作通知文本的补充，只要这些附加属性通知不能被解释为修改许可证。</p><p><strong>对派生作品的定义：”任何作品都是源于或源于形式”，它基于作品（或来源于作品），编辑修改、注释、阐述或其他修改，代表了作者的原创性作品。就本许可证而言，派生作品不应包含可分离的作品，或仅链接（或以名称结合）到作品及其派生作品的界面。</strong></p><p>所以如果要转载有意义原创请按上述方法做到，并发电子邮件至<a href="mailto:yu520080505@163.com">yu520080505@163.com</a>或<a href="mailto:yu520080505@outlook.com">yu520080505@outlook.com</a>,并在醒目的地方加上文章出处。如果回复，说明可以转载，如果没有，请不要转载。</p><p>转载:会在醒目的地方加上原文出处,如果博主没有加上原文出处或侵犯了你的版权,请发电子邮件至<a href="mailto:yu520080505@163.com">yu520080505@163.com</a>或<a href="mailto:yu520080505@outlook.com">yu520080505@outlook.com</a>本博主会立即删除博文。</p><p>无意义原创与笔记:转载时请在醒目的地方加上文章出处。一定要留言’已转载’</p><h1 id="关于代码"><a href="#关于代码" class="headerlink" title="关于代码"></a>关于代码</h1><p><strong>1.本博客所有可能对您的电脑造成危害的代码或文件均会特别告知，如果因为使用/查看了危险代码或文件造成您的损失，本站概不负责。</strong></p><p><strong>2.本站所有未特别声明的代码均为在博主本机或虚拟机上测试通过的代码，文件均为博主正常使用无危害的文件。如果因为使用/查看了安全代码或文件造成您的损失，本站同样概不负责。</strong></p><h1 id="评论系统"><a href="#评论系统" class="headerlink" title="评论系统"></a>评论系统</h1><p>本博客使用的valine评论系统。<br><strong>对于评论区中吵架/骂人等不适当的言论，博主保留删除的权利。其他正常评论，有小概率可能因为数据迁移或博主手滑而导致丢失，对此博主不承担任何责任。</strong></p><h1 id="附加公告"><a href="#附加公告" class="headerlink" title="附加公告"></a>附加公告</h1><p>如果你对本公告有任何问题的，请发邮件至<a href="mailto:yu520080505@163.com">yu520080505@163.com</a>或<a href="mailto:yu520080505@outlook.com">yu520080505@outlook.com</a><br>或者在洛谷上私信我，谢谢配合。</p><p><strong>EOF</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;警告：在访问本站任何页面前，请仔细阅读本文，以免给您带来不必要的麻烦！任何因未阅读本文造成的后果请自己承担！&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>数论笔记2</title>
    <link href="http://yuzijiangorz.gitee.io/2020/03/14/%E6%95%B0%E8%AE%BA%E7%AC%94%E8%AE%B02/"/>
    <id>http://yuzijiangorz.gitee.io/2020/03/14/%E6%95%B0%E8%AE%BA%E7%AC%94%E8%AE%B02/</id>
    <published>2020-03-14T10:05:20.000Z</published>
    <updated>2020-03-15T02:26:59.747Z</updated>
    
    <content type="html"><![CDATA[<p>一周一更的<br>今天第二次上课呢QAQ</p><a id="more"></a><p>欧几里得:以除数和余数反复除，当余数为零时，取除数为最大公约数。<br><del>真的神奇</del><br>做的题:</p><p>1.素数个数</p><p>求x,y之间の素数个数</p><p>input：</p><p>x,y</p><p>output:</p><p>xy之间的素数个数</p><p>代码:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">isp</span><span class="hljs-params">(<span class="hljs-keyword">int</span> o)</span><br></span>&#123;<br><span class="hljs-keyword">if</span>(o==<span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br><span class="hljs-keyword">if</span>(o==<span class="hljs-number">2</span>) <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">2</span>;i*i&lt;=o;i++) <span class="hljs-keyword">if</span>(!x%i) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br><br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">char</span> <span class="hljs-keyword">const</span> *argv[])</span><br></span>&#123;<br><span class="hljs-keyword">int</span> x,y,s=<span class="hljs-number">0</span>;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d %d"</span>,&amp;x,&amp;y);<br><span class="hljs-keyword">if</span>(x&gt;y) swap(x,y);<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=x;i&lt;y;i++) <span class="hljs-keyword">if</span>(isp(i)) s++;<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d\n"</span>,s);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br><span class="hljs-comment">//完活QWQ</span><br>&#125;<br></code></pre></td></tr></table></figure><p>埃氏筛:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> LL; <br><span class="hljs-keyword">bool</span> numlist[<span class="hljs-number">200000001</span>]; <span class="hljs-comment">//生成不大于 n 的所有质数a[2]=0</span><br><span class="hljs-keyword">int</span> prime[<span class="hljs-number">10000001</span>], cnt;<br><span class="hljs-keyword">int</span> a[<span class="hljs-number">1000010</span>];<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">work</span><span class="hljs-params">(<span class="hljs-keyword">int</span> n)</span></span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">2</span>; i &lt;= n; i++)&#123;<br>        <span class="hljs-keyword">if</span>(numlist[i] == <span class="hljs-literal">false</span>)&#123;<br>            prime[cnt++] = i ;<span class="hljs-comment">//cnt++;prime[cnt];prime[0]=2,prime[1]=3,prime[2]=5,prime[3]=7</span><br>            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = i; i * j &lt;= n; j++)<br>                numlist[i * j] = <span class="hljs-literal">true</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>work(<span class="hljs-number">46340</span>);<br><span class="hljs-comment">//int cnt = eshi_shi(46000, prime);</span><br>LL L, R;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%lld%lld"</span>,&amp;L, &amp;R);<br><span class="hljs-comment">//memset(a, 0, sizeof(a));</span><br><span class="hljs-comment">/*cin &gt;&gt; cnt;<br>for(int i = 0; i &lt; cnt; i++)<br>cout &lt;&lt; prime[i] &lt;&lt; ' ' ;*/</span><br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; cnt; i++)&#123;<br><span class="hljs-keyword">for</span>(LL j = max(<span class="hljs-number">2l</span>l, (L - <span class="hljs-number">1</span>) / prime[i] + <span class="hljs-number">1</span>) * prime[i]; j &lt;= R; j += prime[i])&#123;<br>a[j - L] = <span class="hljs-number">1</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">int</span> ans = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(LL i = L; i &lt;= R; i++)&#123;<br><span class="hljs-keyword">if</span>(a[i - L] == <span class="hljs-number">0</span>) ans++; <br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d"</span>, ans);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>小技巧 typedef<del>虽然我早就会了</del><br>方法:<code>typedef oldname newname</code><br>$\mathtt{eg:}$<br><code>typedef string str</code></p><p>就这样吧，作业还没肝完呢。</p><p><strong>EOF</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一周一更的&lt;br&gt;今天第二次上课呢QAQ&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="数论" scheme="http://yuzijiangorz.gitee.io/tags/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>如何给Hexo加速</title>
    <link href="http://yuzijiangorz.gitee.io/2020/03/08/%E5%A6%82%E4%BD%95%E5%8A%A0%E9%80%9FHexo/"/>
    <id>http://yuzijiangorz.gitee.io/2020/03/08/%E5%A6%82%E4%BD%95%E5%8A%A0%E9%80%9FHexo/</id>
    <published>2020-03-08T07:10:10.000Z</published>
    <updated>2020-03-10T07:31:03.114Z</updated>
    
    <content type="html"><![CDATA[<p>并没有摘要。</p><a id="more"></a><p>相信大家现在都有了自己的Hexo博客：taの优点很多，缺点很少</p><p>但是我们担心的最大的缺点就是</p><p>###网速慢</p><p>为什么网速会慢呢？</p><p>因为Githubの服务器在国外</p><p>但我们只需要记住一件事:万物皆可托管码云</p><p>废话不多说</p><h1 id="Start"><a href="#Start" class="headerlink" title="Start!"></a>Start!</h1><p>首先，Git bash+node.js 搞起！</p><p>然后，在<a href="https://gitee.com/" target="_blank" rel="noopener">码云</a>搞一个账号</p><p>然后在git bash里面敲如下代码</p><p><code>cd d:</code></p><p><code>mkdir blog</code></p><p><code>cd blog</code></p><p><code>npm i -g hexo-cli</code></p><p><code>hexo init</code></p><p>等到gitbash出现</p><p><code>INFO: start blogging with Hexo!</code></p><p>时，你就成功了</p><p><code>hexo s --debug</code>一下。</p><p>然后在浏览器里输入<code>localhost:4000</code></p><p>如果你没有乱改的话应该大概是这样的</p><p><img src="https://chen1219.gitee.io/myblog/img/1/s6.png" alt=""></p><p>在Git bash里CTRL+C就可以停止了</p><p>接着，在码云新建一个仓库</p><p><img src="https://s2.ax1x.com/2020/03/07/3OBh4O.jpg" alt=""></p><p>看到我画红圈的那个了吗</p><p>点一下那两张纸</p><p>然后在GitBash里敲<code>npm install hexo-deployer-git --save</code></p><p>接着，在config.yml里修改一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plain">deploy:<br>  type: &#39;git&#39;<br>  repo: &#39;CRTL+V&#39;或repo: &#39;https:&#x2F;&#x2F;gitee.com&#x2F;你的gitee用户名&#x2F;仓库名.git&#39;<br></code></pre></td></tr></table></figure><p>之后，在GitBash里</p><p><code>git config --global user.email &#39;你注册码云的邮箱&#39;</code><br><code>git config --global user.name &#39;你的码云用户名&#39;</code><br><code>hexo d</code></p><p>之后会弹出来一个东西让你输入码云的账号密码</p><p>然后，回到码云仓库，点击服务，选择Gitee Pages(这个功能需要手机验证码)</p><p>选择更新</p><p>然后到你的<code>仓库名.gitee.io</code>就可以了</p><h2 id="重要须知"><a href="#重要须知" class="headerlink" title="重要须知"></a>重要须知</h2><p>dalao们只需要参照<a href="https://www.cnblogs.com/yuzijiangorz/p/12391972.html" target="_blank" rel="noopener">这里</a>把原来的仓库部署到码云，然后在重新部署gitee Pages就可以了</p><h1 id="bug"><a href="#bug" class="headerlink" title="bug"></a>bug</h1><p>由于未知原因，请在每次发布blog时清空仓库，然后在重新部署gitee Pages</p><p><strong>EOF</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;并没有摘要。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="干货" scheme="http://yuzijiangorz.gitee.io/tags/%E5%B9%B2%E8%B4%A7/"/>
    
  </entry>
  
  <entry>
    <title>数论笔记1</title>
    <link href="http://yuzijiangorz.gitee.io/2020/03/07/%E6%95%B0%E8%AE%BA%E7%AC%94%E8%AE%B01/"/>
    <id>http://yuzijiangorz.gitee.io/2020/03/07/%E6%95%B0%E8%AE%BA%E7%AC%94%E8%AE%B01/</id>
    <published>2020-03-07T10:49:03.000Z</published>
    <updated>2020-03-14T10:07:03.130Z</updated>
    
    <content type="html"><![CDATA[<p>一个刚学数论的蒟蒻の笔记<br>今天网课来了好多人呀<br>本酱好紧张QWQ<br><del>都是认识的人紧张啥呀喂!</del></p><a id="more"></a><h1 id="理论"><a href="#理论" class="headerlink" title="理论"></a>理论</h1><h2 id="整除性"><a href="#整除性" class="headerlink" title="整除性:"></a>整除性:</h2><p>给定两个整数<code>a,b (b!=0)</code>如果存在整数q,使<code>a=bq</code>,则成立，写作<code>b|a</code></p><p>也是C++中的<code>a%b==0</code></p><p>因数与倍数:</p><p>如果<code>b|a</code>,则b为a的一个因数</p><h3 id="性质1"><a href="#性质1" class="headerlink" title="性质1:"></a>性质1:</h3><p>如果<code>c|b</code>并且<code>b|a</code>,则<code>c|a</code></p><h3 id="证明"><a href="#证明" class="headerlink" title="证明:"></a>证明:</h3><p><code>c|b</code> -&gt; 存在q1 使得<code>b=q1*c</code></p><p><code>b|a</code> -&gt; 存在q2 是的<code>a*q2=b</code></p><p>因此, <code>a=q2*b=q2*q1*c</code></p><h3 id="性质2"><a href="#性质2" class="headerlink" title="性质2:"></a>性质2:</h3><p>如果 <code>b|a</code>,则 <code>cb|ca</code></p><h3 id="性质3"><a href="#性质3" class="headerlink" title="性质3"></a>性质3</h3><p>如果 <code>c|a</code>且<code>c|b</code>,则对于任意的整数m,n有:</p><p><code>c|(ma+nb)</code></p><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h1 id="判断素数の三种方法"><a href="#判断素数の三种方法" class="headerlink" title="判断素数の三种方法"></a>判断素数の三种方法</h1><h2 id="1-试"><a href="#1-试" class="headerlink" title="1.试"></a>1.试</h2><h2 id="2-埃氏筛"><a href="#2-埃氏筛" class="headerlink" title="2.埃氏筛:"></a>2.埃氏筛:</h2><p>要得到自然数n以内的全部素数，必须把不大于根号n的所有素数的倍数剔除，剩下的就是素数</p><p>eg:</p><p>从一到20:</p><p>将2的倍数去掉</p><p>将3的倍数去掉</p><p>以此类推….<br>将不大于sqrt(20)的素数倍数剔除</p><p>C++代码实现:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-keyword">int</span> n, s = <span class="hljs-number">1</span>;<br><span class="hljs-keyword">bool</span> p[<span class="hljs-number">100001</span>];<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">100000</span>; i++)&#123;<br>p[i] = <span class="hljs-literal">true</span>;<br>&#125;<br>p[<span class="hljs-number">1</span>] = <span class="hljs-literal">false</span>;<br><span class="hljs-built_in">cin</span> &gt;&gt; n;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">"%3d "</span>,<span class="hljs-number">2</span>);<span class="hljs-comment">//cout &lt;&lt; 2;</span><br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">2</span>; i * i &lt;= n; i++)&#123;<br><span class="hljs-keyword">if</span>(p[i])<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">2</span>; i * j &lt;= n; j++)&#123;<br>p[i * j] = <span class="hljs-literal">false</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">3</span>; i &lt;= n; i++)&#123;<br><span class="hljs-keyword">if</span>(p[i]) &#123;<br> <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%3d "</span>, i);<br>&#125;<br>&#125; <br><span class="hljs-comment">//只是其中一种!</span><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>顺便记录一下记录程序运行时间的代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;ctime&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span><br></span>&#123;<br><span class="hljs-keyword">clock_t</span> s,f;<br>s=clock();<br><span class="hljs-comment">//<span class="hljs-doctag">TODO:</span>put the code Here.</span><br>f=clock();<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">"Time: %d s\n"</span>,f-s);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="本酱听了好久才听懂，如果你不介意の话，上本酱の洛咕关注一下本酱吧"><a href="#本酱听了好久才听懂，如果你不介意の话，上本酱の洛咕关注一下本酱吧" class="headerlink" title="本酱听了好久才听懂，如果你不介意の话，上本酱の洛咕关注一下本酱吧"></a>本酱听了好久才听懂，如果你不介意の话，上<strong>本酱の洛咕</strong>关注一下本酱吧</h2><p><strong>EOF</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一个刚学数论的蒟蒻の笔记&lt;br&gt;今天网课来了好多人呀&lt;br&gt;本酱好紧张QWQ&lt;br&gt;&lt;del&gt;都是认识的人紧张啥呀喂!&lt;/del&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="数论" scheme="http://yuzijiangorz.gitee.io/tags/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>NOI ONline爆零记</title>
    <link href="http://yuzijiangorz.gitee.io/2020/03/07/NOI%20online%20%E7%88%86%E9%9B%B6%E8%AE%B0/"/>
    <id>http://yuzijiangorz.gitee.io/2020/03/07/NOI%20online%20%E7%88%86%E9%9B%B6%E8%AE%B0/</id>
    <published>2020-03-07T07:10:10.000Z</published>
    <updated>2020-03-10T07:30:48.864Z</updated>
    
    <content type="html"><![CDATA[<p>没有摘要呢。</p><a id="more"></a><p>因为本酱实在太蒻了，所以本酱报的普及。</p><p>然而，网站炸了。</p><p>不是我说，NOI就不能吧网站搭好一点吗？</p><p><strong>EOF</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;没有摘要呢。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="爆零记" scheme="http://yuzijiangorz.gitee.io/tags/%E7%88%86%E9%9B%B6%E8%AE%B0/"/>
    
  </entry>
  
</feed>
